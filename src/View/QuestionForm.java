/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DAO.CauHoiDAO;
import Model.CauHoi;
import jaco.mp3.player.MP3Player;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JRadioButton;
import javax.swing.JSlider;
import javax.swing.JTextField;
import javax.swing.Timer;
import javazoom.jl.player.Player;

/**
 *
 * @author xuant
 */
public class QuestionForm extends javax.swing.JPanel {

    /**
     * Creates new form QuestionForm
     *
     * @param ch
     */
    public QuestionForm(CauHoi ch) {
        initComponents();
        loaiCH = ch.getMaLCH();

        showQuestion(ch);
    }

    public ButtonGroup bg;

    public JTextField txt;

    public JCheckBox[] chk = new JCheckBox[4];

    public int loaiCH;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnAnswer = new javax.swing.JPanel();
        jpnHeader = new javax.swing.JPanel();
        lblQuestion = new javax.swing.JLabel();
        lblDoKho = new javax.swing.JLabel();
        jpnAudio = new javax.swing.JPanel();

        jpnAnswer.setLayout(new java.awt.GridLayout(4, 1));

        lblQuestion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblDoKho.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDoKho.setText("Level:");

        javax.swing.GroupLayout jpnAudioLayout = new javax.swing.GroupLayout(jpnAudio);
        jpnAudio.setLayout(jpnAudioLayout);
        jpnAudioLayout.setHorizontalGroup(
            jpnAudioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 353, Short.MAX_VALUE)
        );
        jpnAudioLayout.setVerticalGroup(
            jpnAudioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jpnHeaderLayout = new javax.swing.GroupLayout(jpnHeader);
        jpnHeader.setLayout(jpnHeaderLayout);
        jpnHeaderLayout.setHorizontalGroup(
            jpnHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnHeaderLayout.createSequentialGroup()
                .addGroup(jpnHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnHeaderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblDoKho, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE))
                    .addGroup(jpnHeaderLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(lblQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jpnHeaderLayout.createSequentialGroup()
                .addGap(192, 192, 192)
                .addComponent(jpnAudio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnHeaderLayout.setVerticalGroup(
            jpnHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDoKho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jpnAudio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(lblQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpnHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jpnAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpnHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jpnAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addGap(54, 54, 54))
        );
    }// </editor-fold>//GEN-END:initComponents

    //hàm hiển thị câu hỏi theo loại câu hỏi
    private void showQuestion(CauHoi ch) {
        int flag = ch.getMaLCH();
        int maNCH = ch.getMaNCH();
        String dapAn[] = {ch.getDapAnA(), ch.getDapAnB(), ch.getDapAnC(), ch.getDapAnD()};
        String doanVan = ch.getDoanVan() == null ? "" : ch.getDoanVan();
        String audio = ch.getAmThanh() == null ? "" : ch.getAmThanh();
        //lấy 1 list random 0-3 để hiển thị random đáp án
        List<Integer> listRandom = CauHoiDAO.randomList(4, 4);
        if (maNCH == 2) {
            JButton btn = new JButton("Play");
            btn.setVisible(true);
            JSlider jsl = new JSlider();
            jsl.setVisible(true);
            jsl.setValue(1);
            jpnAudio.setLayout(new GridLayout(1, 2));
            jpnAudio.add(btn);
            btn.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent ae) {
                    MP3Player mp3 = new MP3Player(new File("src\\Audio\\" + audio));
                    mp3.play();
//                    try {
//                        FileInputStream fis = new FileInputStream("src\\Audio\\" + audio);
//                        Player player = new Player(fis);
//                        player.play();
//                    } catch (Exception e) {
//                        e.printStackTrace();
//                    }
                    Timer timer = new Timer(500, new ActionListener() {
                        int start = 1;
                        @Override
                        public void actionPerformed(ActionEvent ae) {
                            jsl.setValue(start++);
                        }
                    });
                    timer.start();
                }
            });
            jpnAudio.add(jsl);
        }
        switch (flag) {
            case 1:

                lblQuestion.setText(doanVan + "\n" + ch.getNoiDungCH());
                lblDoKho.setText(lblDoKho.getText() + " " + ch.getCapDo());
                bg = new ButtonGroup();
                for (int i = 0; i < listRandom.size(); i++) {
                    JRadioButton rdo = new JRadioButton(dapAn[listRandom.get(i)]);
                    rdo.setActionCommand(dapAn[listRandom.get(i)]);
                    bg.add(rdo);
                    jpnAnswer.add(rdo);
                }
                break;
            case 2:
                lblQuestion.setText(doanVan + "\n" + ch.getNoiDungCH());
                lblDoKho.setText(lblDoKho.getText() + " " + ch.getCapDo());
                for (int i = 0; i < listRandom.size(); i++) {
                    JCheckBox check = new JCheckBox(dapAn[listRandom.get(i)]);
                    check.setActionCommand(dapAn[listRandom.get(i)]);
                    jpnAnswer.add(check);
                    chk[i] = check;
                }
                break;
            case 3:
                lblQuestion.setText(doanVan + "\n" + ch.getNoiDungCH());
                lblDoKho.setText(lblDoKho.getText() + " " + ch.getCapDo());
                txt = new JTextField();
                jpnAnswer.add(txt);
                break;
            default:
                break;
        }
    }

    public ButtonGroup getBg() {
        return bg;
    }

    public void setBg(ButtonGroup bg) {
        this.bg = bg;
    }

    public JTextField getTxt() {
        return txt;
    }

    public void setTxt(JTextField txt) {
        this.txt = txt;
    }

    public JCheckBox[] getChk() {
        return chk;
    }

    public void setChk(JCheckBox[] chk) {
        this.chk = chk;
    }

    public int getLoaiCH() {
        return loaiCH;
    }

    public void setLoaiCH(int loaiCH) {
        this.loaiCH = loaiCH;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jpnAnswer;
    private javax.swing.JPanel jpnAudio;
    private javax.swing.JPanel jpnHeader;
    private javax.swing.JLabel lblDoKho;
    private javax.swing.JLabel lblQuestion;
    // End of variables declaration//GEN-END:variables
}
