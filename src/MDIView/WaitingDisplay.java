/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MDIView;

import DAO.FormDAO;
import Model.ThanhVien;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JDesktopPane;
import javax.swing.Timer;

/**
 *
 * @author xuant
 */
public class WaitingDisplay extends javax.swing.JInternalFrame {

    /**
     * Creates new form WaitingDisplay
     */
    ThanhVien thanhVien = null;

    JDesktopPane jDesktopPane;

    public WaitingDisplay(JDesktopPane jdk, ThanhVien tv) {
        initComponents();
        thanhVien = tv;
        jDesktopPane = jdk;
        runCar();
        runMotor();
        runLoading();
        runPeople();
    }

    public void runCar() {
        int flag = (int) lblCar.getX();

        Timer timer = new Timer(16, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                int x = (int) lblCar.getX();
                int y = (int) lblCar.getY();
                if (x == 470) {
                    x = 1000;
                } else {
                    x++;
                }
                lblCar.setLocation(x, y);
            }
        });
        timer.start();
    }

    public void runMotor() {
        int flag = (int) lblMotor.getX();
        Timer timer = new Timer(17, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                int x = (int) lblMotor.getX();
                int y = (int) lblMotor.getY();
                if (x == 470) {
                    x = 1000;
                } else {
                    x++;
                }
                lblMotor.setLocation(x, y);
            }
        });
        timer.start();
    }

    public void runPeople() {
        int flag = (int) lblPeople.getX();
        Timer timer = new Timer(14, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                int x = (int) lblPeople.getX();
                int y = (int) lblPeople.getY();
                if (x == 470) {
                    x = 1000;
                } else {
                    x++;
                }
                lblPeople.setLocation(x, y);
            }
        });
        timer.start();
    }

    public void runLoading() {
        Timer timer = new Timer(60, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                int start = jpbLoading.getValue();
                start++;
                jpbLoading.setValue(start);

            }
        });
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblPeople = new javax.swing.JLabel();
        lblCar = new javax.swing.JLabel();
        jpbLoading = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        lblMotor = new javax.swing.JLabel();

        setResizable(true);
        setTitle("Loading...");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Đợi tí nhé bạn ơi!");

        lblPeople.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/baseline_directions_run_black_24dp.png"))); // NOI18N

        lblCar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/baseline_toys_black_24dp_1.png"))); // NOI18N

        jpbLoading.setStringPainted(true);
        jpbLoading.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jpbLoadingStateChanged(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/baseline_location_on_black_24dp.png"))); // NOI18N

        lblMotor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMotor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/baseline_two_wheeler_black_24dp.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpbLoading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblMotor)
                                    .addComponent(lblCar)
                                    .addComponent(lblPeople))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)))))
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMotor)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblPeople, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(lblCar)
                .addGap(18, 18, 18)
                .addComponent(jpbLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jpbLoadingStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jpbLoadingStateChanged
        try {
            int count = jpbLoading.getValue();
            if (count == 100) {
                MainDisplay mainDisplay = new MainDisplay(thanhVien, jDesktopPane);
                mainDisplay.setVisible(true);

                jDesktopPane.add(mainDisplay);
                FormDAO.centerJIF(jDesktopPane, mainDisplay);
                try {
                    mainDisplay.setSelected(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
                if (thanhVien.getMaVT() == 1) {
                    Server server = new Server();
                    server.setVisible(true);
                    jDesktopPane.add(server);
                    Dimension desktopSize = jDesktopPane.getSize();
                    Dimension jInternalFrameSize = server.getSize();
                    int width = (desktopSize.width - jInternalFrameSize.width);
                    int height = (desktopSize.height - jInternalFrameSize.height);
                    server.setLocation(width, height);
                }
                this.dispose();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jpbLoadingStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JProgressBar jpbLoading;
    private javax.swing.JLabel lblCar;
    private javax.swing.JLabel lblMotor;
    private javax.swing.JLabel lblPeople;
    // End of variables declaration//GEN-END:variables
}
