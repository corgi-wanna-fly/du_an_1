/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MDIView;

import DAO.FormDAO;
import DAO.KetQuaDAO;
import DAO.ThanhVienDAO;
import DAO.TraLoiDAO;
import Model.KetQua;
import Model.ThanhVien;
import Model.TraLoi;
import java.util.Date;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author xuant
 */
public class Result extends javax.swing.JInternalFrame {

    /**
     * Creates new form Result
     */
    /**
     * Creates new form TraLoi
     */
    DefaultTableModel model;

    ThanhVien member;

    List<TraLoi> listAnswer;

    int soCauDung;

    int examID;

    int lastId;

    JDesktopPane jDesktopPane;

    public Result(List<TraLoi> list, ThanhVien tv, int maDT, JDesktopPane jdk) {
        initComponents();
        listAnswer = list;
        member = tv;
        examID = maDT;
        jDesktopPane = jdk;
        model = (DefaultTableModel) tblKetQua.getModel();
        fillTable(list);
        //lưu kết quả
        insertKetQua();
        lastId = KetQuaDAO.lastResultID();
    }
//hàm đổ kết quả lên bảng

    private void fillTable(List<TraLoi> listAnswer) {
        int count = 0;
        for (int i = 0; i < listAnswer.size(); i++) {
            TraLoi tl = listAnswer.get(i);
            boolean res = true;
            String arr[] = tl.getDapAnChon().split(",");
            if (arr.length == 1) {
                res = tl.getDapAnChon().equalsIgnoreCase("[" + tl.getDapAnDung().trim() + "]");
            } else {
                String ans = tl.getDapAnChon();
                ans = ans.substring(1, ans.length() - 1);
                String right = tl.getDapAnDung();
                //kiểm tra độ dài
                if ((ans.length()) == right.length()) {
                    arr[0] = arr[0].substring(1);
                    arr[arr.length - 1] = arr[arr.length - 1].substring(0, arr[arr.length - 1].length() - 1);
                    for (int j = 0; j < arr.length; j++) {
                        if (!right.toLowerCase().contains(arr[j].toLowerCase())) {
                            res = false;
                        }
                    }
                } else {
                    res = false;
                }
            }
            if (res) {
                count++;
            }
            model.addRow(new Object[]{
                i + 1,
                tl.getMaCH(),
                tl.getDapAnChon(),
                tl.getDapAnDung(),
                res ? "Đúng" : "Sai"
            });
        }
        //set label
        lblKetQua.setText("Kết quả: " + count + " / " + listAnswer.size() + " câu");
        soCauDung = count;
    }

    //hàm lưu traloi vào csdl
    private void insertTraLoi() {
        for (TraLoi tl : listAnswer) {
            tl.setMaKQ(lastId);
            tl.setMaTV(member.getMaTV());
            TraLoiDAO.insert(tl);
        }
    }

    //hàm lưu ketqua vào csdl
    private void insertKetQua() {
        KetQua kq = new KetQua();
        kq.setMaKQ(KetQuaDAO.lastResultID() + 1);
        kq.setSoCauDung(soCauDung);
        kq.setNgayThucHien(new Date());
        kq.setDanhGia(danhGia());
        kq.setMaTV(member.getMaTV());
        kq.setMaDT(examID);
        KetQuaDAO.insert(kq);
    }

    //hàm trả về đánh giá
    private String danhGia() {
        String res = "";
        if (soCauDung < 25) {
            res = "Bố mẹ ở nhà còng lưng, con đi học k được 5 điểm";
        } else if (soCauDung < 40) {
            res = "Xứng đáng có 10 người yêu";
        } else {
            res = "Bạn là cái gì đó không phải người";
        }
        return res;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKetQua = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblKetQua = new javax.swing.JLabel();

        tblKetQua.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã Câu Hỏi", "Đáp án chọn", "Đáp án đúng", "Kết quả"
            }
        ));
        jScrollPane1.setViewportView(tblKetQua);

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/baseline_save_black_24dp.png"))); // NOI18N
        btnSave.setText("Lưu kết quả");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/baseline_cancel_black_24dp.png"))); // NOI18N
        btnCancel.setText("Hủy bỏ");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblKetQua.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblKetQua.setForeground(new java.awt.Color(255, 0, 0));
        lblKetQua.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblKetQua.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(btnSave)
                        .addGap(32, 32, 32)
                        .addComponent(btnCancel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblKetQua, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnSave});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblKetQua, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCancel, btnSave});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            if (member.getTaiKhoan().length() == 0) {
                insertTraLoi();
                Register register = new Register(member.getMaTV(), false, jDesktopPane);
                register.setVisible(true);
                jDesktopPane.add(register);
                FormDAO.centerJIF(jDesktopPane, register);
                try {
                    register.setSelected(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }

                this.dispose();
            } else {
                //lưu câu trả lời
                insertTraLoi();
                //thông báo
                JOptionPane.showMessageDialog(this, "Lưu kết quả thành công.");
            }

            this.dispose();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        if (member.getTaiKhoan().length() == 0) {
            ThanhVienDAO.delete(member.getMaTV());
            //xóa bản ghi kết quả lưu tạm
            KetQuaDAO.delete(lastId);
            this.dispose();
            jDesktopPane.removeAll();
        } else {
            //xóa bản ghi kết quả lưu tạm
            KetQuaDAO.delete(lastId);
            this.dispose();
        }
    }//GEN-LAST:event_btnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblKetQua;
    private javax.swing.JTable tblKetQua;
    // End of variables declaration//GEN-END:variables
}
