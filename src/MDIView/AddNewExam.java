/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MDIView;

import DAO.CapDoDAO;
import DAO.CauHoiDAO;
import DAO.DeThiDAO;
import Model.CapDo;
import Model.CauHoi;
import Model.DeThi;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.FormulaEvaluator;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author xuant
 */
public class AddNewExam extends javax.swing.JInternalFrame {

    /**
     * Creates new form AddNewExam
     */
    List<CauHoi> list = new ArrayList<>();

    int maDt;

    public AddNewExam() {
        initComponents();
        fillCbo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cboCapDo = new javax.swing.JComboBox<>();
        txtTenDeThi = new javax.swing.JTextField();
        btnImport = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtThoiGian = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Add new exam");

        jLabel1.setText("Tên đề thi");

        jLabel2.setText("Cấp độ");

        cboCapDo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnImport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Microsoft_Excel_2013-2019_logo.svg.png"))); // NOI18N
        btnImport.setText("Import (Excel)");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/baseline_add_black_24dp.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/baseline_cancel_black_24dp.png"))); // NOI18N
        btnCancel.setText("Hủy");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel3.setText("Thời gian(s)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnAdd)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCancel))
                        .addComponent(cboCapDo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTenDeThi, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                        .addComponent(btnImport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cboCapDo, txtTenDeThi, txtThoiGian});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnCancel});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cboCapDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTenDeThi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(btnImport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnCancel))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cboCapDo, txtTenDeThi, txtThoiGian});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdd, btnCancel});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //hàm đổ danh sách cấp độ
    private void fillCbo() {
        List<CapDo> list = CapDoDAO.selectAll();
        cboCapDo.removeAllItems();
        for (CapDo item : list) {
            cboCapDo.addItem(item.getTenCD());
        }
    }

    // Get cell value
    private static Object getCellValue(Cell cell) {
        CellType cellType = cell.getCellTypeEnum();
        Object cellValue = null;
        switch (cellType) {
            case BOOLEAN:
                cellValue = cell.getBooleanCellValue();
                break;
            case FORMULA:
                Workbook workbook = cell.getSheet().getWorkbook();
                FormulaEvaluator evaluator = workbook.getCreationHelper().createFormulaEvaluator();
                cellValue = evaluator.evaluate(cell).getNumberValue();
                break;
            case NUMERIC:
                cellValue = cell.getNumericCellValue();
                break;
            case STRING:
                cellValue = cell.getStringCellValue();
                break;
            case _NONE:
            case BLANK:
            case ERROR:
                break;
            default:
                break;
        }

        return cellValue;
    }
    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed

        FileInputStream fis = null;
        BufferedInputStream bis = null;
        XSSFWorkbook workbook = null;
        try {
            JFileChooser jfc = new JFileChooser();
            int i = jfc.showOpenDialog(this);
            if (i == JFileChooser.APPROVE_OPTION) {
                File file = jfc.getSelectedFile();
                fis = new FileInputStream(file);
                bis = new BufferedInputStream(fis);
                workbook = new XSSFWorkbook(bis);
                XSSFSheet sheet = workbook.getSheetAt(0);
                for (int j = 1; j < sheet.getLastRowNum(); j++) {
                    XSSFRow row = sheet.getRow(j);
                    XSSFCell cellId = row.getCell(0);
                    XSSFCell cellDoanVan = row.getCell(1);
                    XSSFCell cellIAmThanh = row.getCell(2);
                    XSSFCell cellNoiDung = row.getCell(3);
                    XSSFCell cellDapAnA = row.getCell(4);
                    XSSFCell cellDapAnB = row.getCell(5);
                    XSSFCell cellDapAnC = row.getCell(6);
                    XSSFCell cellDapAnD = row.getCell(7);
                    XSSFCell cellDapAnDung = row.getCell(8);
                    XSSFCell cellCapDo = row.getCell(9);
                    XSSFCell cellMaDT = row.getCell(10);
                    XSSFCell cellMaLCH = row.getCell(11);
                    XSSFCell cellMaNCH = row.getCell(12);
                    CauHoi ch = new CauHoi();
                    ch.setMaCH(new BigDecimal((double) getCellValue(cellId)).intValue());
                    ch.setDoanVan((String) getCellValue(cellDoanVan));
                    ch.setAmThanh((String) getCellValue(cellIAmThanh));
                    ch.setNoiDungCH((String) getCellValue(cellNoiDung));
                    ch.setDapAnA((String) getCellValue(cellDapAnA));
                    ch.setDapAnB((String) getCellValue(cellDapAnB));
                    ch.setDapAnC((String) getCellValue(cellDapAnC));
                    ch.setDapAnD((String) getCellValue(cellDapAnD));
                    ch.setDapAnDung((String) getCellValue(cellDapAnDung));
                    ch.setCapDo((String) getCellValue(cellCapDo));
                    ch.setMaDT(new BigDecimal((double) getCellValue(cellMaDT)).intValue());
                    ch.setMaLCH(new BigDecimal((double) getCellValue(cellMaLCH)).intValue());
                    ch.setMaNCH(new BigDecimal((double) getCellValue(cellMaNCH)).intValue());
                    maDt = new BigDecimal((double) getCellValue(cellMaDT)).intValue();
                    list.add(ch);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnImportActionPerformed

    //hàm kiểm tra dữ liệu nhập vào
    private boolean validateData() {
        if (txtTenDeThi.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "Không để trống tên đề thi");
            txtTenDeThi.requestFocus();
            return false;
        }
        if (txtThoiGian.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "Không để trống thời gian");
            txtThoiGian.requestFocus();
            return false;
        } else {
            try {
                int flag = Integer.parseInt(txtThoiGian.getText().trim());
                if (flag <= 0) {
                    JOptionPane.showMessageDialog(this, "Nhập thời gian lớn hơn 0");
                    txtThoiGian.requestFocus();
                    return false;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Nhập thời gian là số");
                txtThoiGian.requestFocus();
                return false;
            }
        }
        return true;
    }
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            if (!validateData()) {
                return;
            }
            DeThi dt = new DeThi(maDt, txtTenDeThi.getText().trim(), Integer.parseInt(txtThoiGian.getText().trim()), cboCapDo.getSelectedIndex()+1);
            //thêm đề thi vào csdl
            if(DeThiDAO.insert(dt)){
                JOptionPane.showMessageDialog(this, "Thêm mới đề thi thành công");
                //thêm câu hỏi
                for(CauHoi item: list){
                    CauHoiDAO.insert(item);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Thêm mới đề thi thất bại");
                return;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnImport;
    private javax.swing.JComboBox<String> cboCapDo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtTenDeThi;
    private javax.swing.JTextField txtThoiGian;
    // End of variables declaration//GEN-END:variables
}
