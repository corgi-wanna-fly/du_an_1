/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MDIView;

import DAO.FormDAO;
import Model.ThanhVien;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDesktopPane;
import javax.swing.JTabbedPane;

/**
 *
 * @author xuant
 */
public class MainDisplay extends javax.swing.JInternalFrame {

    /**
     * Creates new form MainDisplay
     */
    ThanhVien member;

    JDesktopPane jDesktopPane;

    public MainDisplay(ThanhVien tv, JDesktopPane jdk) {
        initComponents();
        member = tv;
        jDesktopPane = jdk;
        setRole(tv.getMaVT());
        setColorButton();
        setAction();
        showMember(tv);
    }

    private void setColorButton() {
        JButton jButton[] = {btnMain, btnTest, btnQLTV, btnQLDT, btnTKDL};
        for (JButton jb : jButton) {
            jb.setBackground(new Color(178, 34, 34));
            jb.setForeground(Color.white);
            jb.setFont(new Font("Tahoma", Font.BOLD, 14));
        }
    }

    private void showMember(ThanhVien tv) {
        try {
            File file = new File("src\\Images\\" + tv.getHinhAnh());
            Image img = ImageIO.read(file);
            int width = 209;
            int height = 195;
            lblImage.setText(null);
            lblImage.setIcon(new ImageIcon(img.getScaledInstance(width, height, 0)));
            lblName.setText(tv.getHoTen());

            //hiển thị tab màn hình chính
            if (tbpMain.getTabCount() != 0) {
                tbpMain.removeAll();
            }
            Display display = new Display();
            tbpMain.addTab("Màn hình chính", display);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setAction() {
        JButton jButton[] = {btnMain, btnTest, btnQLTV, btnQLDT, btnTKDL};
        for (JButton jb : jButton) {
            jb.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent e) {
                }

                @Override
                public void mousePressed(MouseEvent e) {
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                }

                @Override
                public void mouseEntered(MouseEvent e) {
                    jb.setBackground(new Color(205, 173, 0));
                    jb.setForeground(Color.white);
                    jb.setFont(new Font("Tahoma", Font.BOLD, 14));
                }

                @Override
                public void mouseExited(MouseEvent e) {
                    jb.setBackground(new Color(178, 34, 34));
                    jb.setForeground(Color.white);
                    jb.setFont(new Font("Tahoma", Font.BOLD, 14));
                }
            });
        }
    }

    private void setRole(int role) {
        if (role == 2) {
            btnQLTV.setText("Quản lý tài khoản");
            btnQLTV.setActionCommand("Quản lý tài khoản");
            btnQLDT.setText("Lịch sử thi");
            btnQLDT.setActionCommand("Lịch sử thi");
            btnTKDL.setText("Phản hồi- Góp ý");
            btnTKDL.setActionCommand("Phản hồi- Góp ý");
            if(member.getTaiKhoan().length() == 0){
                btnQLDT.setEnabled(false);
                btnQLTV.setEnabled(false);
                btnTKDL.setEnabled(false);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblImage = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnMain = new javax.swing.JButton();
        btnTest = new javax.swing.JButton();
        btnQLTV = new javax.swing.JButton();
        btnQLDT = new javax.swing.JButton();
        btnTKDL = new javax.swing.JButton();
        tbpMain = new javax.swing.JTabbedPane();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("MainDisplay");

        jPanel1.setBackground(new java.awt.Color(209, 238, 238));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.setText("Image");
        lblImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblName.setText("Name");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(lblImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblName)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(122, 139, 139));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new java.awt.GridLayout(5, 0));

        btnMain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Main.png"))); // NOI18N
        btnMain.setText("Màn hình chính");
        btnMain.setOpaque(false);
        btnMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainActionPerformed(evt);
            }
        });
        jPanel2.add(btnMain);

        btnTest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Test.png"))); // NOI18N
        btnTest.setText("Thi ngay đi");
        btnTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestActionPerformed(evt);
            }
        });
        jPanel2.add(btnTest);

        btnQLTV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/QLTV.png"))); // NOI18N
        btnQLTV.setText("Quản lý thành viên");
        btnQLTV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLTVActionPerformed(evt);
            }
        });
        jPanel2.add(btnQLTV);

        btnQLDT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/QLDT.png"))); // NOI18N
        btnQLDT.setText("Quản lý đề thi");
        btnQLDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLDTActionPerformed(evt);
            }
        });
        jPanel2.add(btnQLDT);

        btnTKDL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/TK.png"))); // NOI18N
        btnTKDL.setText("Thống kê dữ liệu");
        btnTKDL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTKDLActionPerformed(evt);
            }
        });
        jPanel2.add(btnTKDL);

        tbpMain.setToolTipText("");
        tbpMain.setMaximumSize(new java.awt.Dimension(771, 626));
        tbpMain.setMinimumSize(new java.awt.Dimension(771, 626));
        tbpMain.setPreferredSize(new java.awt.Dimension(771, 626));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbpMain, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(786, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tbpMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 386, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(254, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainActionPerformed
        // TODO add your handling code here:
        try {
            if (tbpMain.getTabCount() != 0) {
                tbpMain.removeAll();
            }
            Display display = new Display();
            tbpMain.addTab("Màn hình chính", display);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnMainActionPerformed

    private void btnTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestActionPerformed
        // TODO add your handling code here:
        try {
            if (tbpMain.getTabCount() != 0) {
                tbpMain.removeAll();
            }
            TestDisplay testDisplay = new TestDisplay(member, jDesktopPane);
            tbpMain.addTab("Test", testDisplay);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnTestActionPerformed

    private void btnQLTVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLTVActionPerformed
        try {
            String cmd = btnQLTV.getActionCommand();
            if (cmd.equals("Quản lý thành viên")) {
                if (tbpMain.getTabCount() != 0) {
                    tbpMain.removeAll();
                }
                MemberManagement mm = new MemberManagement(jDesktopPane);
                tbpMain.addTab("Quản lý thành viên", mm);
            }
            if (cmd.equals("Quản lý tài khoản")) {
                if (tbpMain.getTabCount() != 0) {
                    tbpMain.removeAll();
                }
                AccountManagement am = new AccountManagement(member);
                tbpMain.addTab("Quản lý tài khoản", am);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnQLTVActionPerformed

    private void btnTKDLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTKDLActionPerformed
        // TODO add your handling code here:
        try {
            String cmd = btnTKDL.getActionCommand();
            if (cmd.equals("Thống kê dữ liệu")) {
                if (tbpMain.getTabCount() != 0) {
                    tbpMain.removeAll();
                }
                Reporter rp = new Reporter();
                tbpMain.addTab("Thống kê", rp);
            } else {

            }
            if (cmd.equals("Phản hồi- Góp ý")) {
                if (tbpMain.getTabCount() != 0) {
                    tbpMain.removeAll();
                }
                Client client = new Client(member);
                jDesktopPane.add(client);
                FormDAO.centerJIF(jDesktopPane, client);
                client.setSelected(true);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnTKDLActionPerformed

    private void btnQLDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLDTActionPerformed
        // TODO add your handling code here:
        try {
            String cmd = btnQLDT.getActionCommand();
            if (cmd.equals("Quản lý đề thi")) {
                if (tbpMain.getTabCount() != 0) {
                    tbpMain.removeAll();
                }
                ExamManagement em = new ExamManagement(jDesktopPane);
                tbpMain.addTab("Quản lý đề thi", em);
            }
            if (cmd.equals("Lịch sử thi")) {
                if (tbpMain.getTabCount() != 0) {
                    tbpMain.removeAll();
                }
                History history = new History(member);
                tbpMain.addTab("Lịch sử thi", history);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnQLDTActionPerformed

    public JTabbedPane getTbpMain() {
        return tbpMain;
    }

    public void setTbpMain(JTabbedPane tbpMain) {
        this.tbpMain = tbpMain;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMain;
    private javax.swing.JButton btnQLDT;
    private javax.swing.JButton btnQLTV;
    private javax.swing.JButton btnTKDL;
    private javax.swing.JButton btnTest;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblName;
    private javax.swing.JTabbedPane tbpMain;
    // End of variables declaration//GEN-END:variables
}
